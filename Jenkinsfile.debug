pipeline {
    agent any
    
    environment {
        PYTHONPATH = "${WORKSPACE}"
    }

    stages {
        stage('Python Discovery') {
            steps {
                echo 'Finding Python on Raspberry Pi...'
                sh '''
                    echo "=== PYTHON DISCOVERY DEBUG ==="
                    echo "Current user: $(whoami)"
                    echo "PATH: $PATH"
                    echo "Working directory: $(pwd)"
                    echo ""
                    
                    echo "=== CHECKING COMMON PYTHON LOCATIONS ==="
                    for path in /usr/bin/python3 /usr/bin/python /usr/local/bin/python3 /usr/local/bin/python /bin/python3 /bin/python; do
                        if [ -f "$path" ]; then
                            echo "‚úÖ Found: $path"
                            $path --version 2>/dev/null || echo "  (but not executable)"
                        else
                            echo "‚ùå Not found: $path"
                        fi
                    done
                    
                    echo ""
                    echo "=== SEARCHING WITH FIND ==="
                    find /usr -name "python*" -type f -executable 2>/dev/null | head -5 || echo "Find failed"
                    
                    echo ""
                    echo "=== COMMAND TESTS ==="
                    command -v python3 && echo "command -v python3 works" || echo "command -v python3 fails"
                    command -v python && echo "command -v python works" || echo "command -v python fails"
                    which python3 2>/dev/null && echo "which python3 works" || echo "which python3 fails"
                    which python 2>/dev/null && echo "which python works" || echo "which python fails"
                '''
            }
        }
        
        stage('Simple Test') {
            steps {
                echo 'Testing if we can run Python with absolute path...'
                sh '''
                    # Try absolute paths first
                    if [ -x "/usr/bin/python3" ]; then
                        echo "‚úÖ Using /usr/bin/python3"
                        /usr/bin/python3 --version
                        /usr/bin/python3 -c "import sys; print('Python works! Path:', sys.executable)"
                        
                        # Try running our app
                        echo "Testing app.py..."
                        /usr/bin/python3 app.py
                        
                        # Try running basic tests
                        echo "Testing unittest..."
                        /usr/bin/python3 -m unittest test_app.py -v || echo "Tests failed as expected due to multiply bug"
                        
                    elif [ -x "/usr/bin/python" ]; then
                        echo "‚úÖ Using /usr/bin/python"
                        /usr/bin/python --version
                        /usr/bin/python -c "import sys; print('Python works! Path:', sys.executable)"
                        
                        # Try running our app
                        echo "Testing app.py..."
                        /usr/bin/python app.py
                        
                        # Try running basic tests
                        echo "Testing unittest..."
                        /usr/bin/python -m unittest test_app.py -v || echo "Tests failed as expected due to multiply bug"
                        
                    else
                        echo "‚ùå No Python executable found!"
                        echo "Available executables in /usr/bin:"
                        ls -la /usr/bin/ | grep python || echo "No python files"
                        exit 1
                    fi
                '''
            }
        }
    }
    
    post {
        always {
            echo 'üìã Discovery complete!'
        }
        failure {
            echo '‚ùå Discovery failed!'
        }
    }
}
